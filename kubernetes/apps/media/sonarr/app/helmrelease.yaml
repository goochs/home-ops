---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controller:
      type: statefulset
      statefulset:
        volumeClaimTemplates:
          - name: config
            mountPath: /config
            accessMode: ReadWriteOnce
            size: 10Gi
            storageClass: longhorn

      containers:
        main:
          image:
            repository: ghcr.io/onedr0p/sonarr-develop
            tag: 4.0.0.688@sha256:651261e5fdcc5399edda1bff312a50cad131a36d6a8f8dc39e43a352f4f2e0c3
          env:
            TZ: ${TIMEZONE}
            SONARR__INSTANCE_NAME: Sonarr
            SONARR__PORT: &port 80
            SONARR__APPLICATION_URL: "https://sonarr.${SECRET_DOMAIN}"
            SONARR__LOG_LEVEL: info
            SONARR__THEME: dark
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              memory: 1000Mi

      pod:
        securityContext:
          runAsUser: 568
          runAsGroup: 568
          fsGroup: 568
          fsGroupChangePolicy: "OnRootMismatch"

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: mdi:television-box
        hosts:
          - host: &host "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: *host
            hosts:
              - *host

    persistence:
      hoard:
        enabled: true
        existingClaim: hoard-nfs
        mountPath: /hoard
        readOnly: false

