---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name echo-server
spec:
  chart:
    spec:
      chart: app-template
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 4.0.1
  install:
    remediation:
      retries: 3
  interval: 30m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  values:
    controllers:
      echo-server:
        containers:
          app:
            env:
              HTTP_PORT: 8080
              LOG_IGNORE_PATH: /healthz
              LOG_WITHOUT_NEWLINE: true
              PROMETHEUS_ENABLED: true
              TZ: America/New_York
            image:
              repository: ghcr.io/mendhak/http-https-echo
              tag: 37
            probes:
              liveness: &probes
                custom: true
                enabled: true
                spec:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
              readiness: *probes
            resources:
              limits:
                memory: 64Mi
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: {drop: ["ALL"]}
              readOnlyRootFilesystem: true
        strategy: RollingUpdate
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile: {type: RuntimeDefault}
    ingress:
      app:
        className: external
        hosts:
          - host: "{{ .Release.Name }}.serek.xyz"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    service:
      app:
        controller: *name
        ports:
          http:
            port: 8080
    serviceMonitor:
      app:
        endpoints:
          - interval: 1m
            path: /metrics
            port: http
            scheme: http
            scrapeTimeout: 10s
        serviceName: echo-server
