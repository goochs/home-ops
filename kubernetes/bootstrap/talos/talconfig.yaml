# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.10.7
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.34.0

clusterName: &cluster home
endpoint: https://10.0.30.31:6443

additionalApiServerCertSans: &sans
  - &talosVIP 10.0.30.30
  - 127.0.0.1
  - k8s.serek.xyz
additionalMachineCertSans: *sans

clusterPodNets:
  - 10.1.0.0/17
clusterSvcNets:
  - 10.1.128.0/17
cniConfig:
  name: none

nodes:
  - controlPlane: true
    hostname: k8s-m1
    installDiskSelector:
      size: '<= 300GB'
    ipAddress: 10.0.30.31
    userVolumes:
      - name: extra
        provisioning:
          diskSelector:
            match: disk.transport == 'nvme' && !system_disk
          grow: true
          minSize: 500GiB
        filesystem:
          type: xfs
    networkInterfaces:
      - interface: bond0
        addresses:
          - 10.0.30.31/24
        bond: &bondconfig
          interfaces:
            - enp1s0f1
            - enp0s31f6
          primary: enp1s0f1
          numPeerNotif: 20
          mode: active-backup
        dhcp: false
        routes: &routes
          - network: 0.0.0.0/0
            gateway: 10.0.30.1
        vip:
          ip: *talosVIP
        vlans: &vlanconfig
          - vlanId: 10
            dhcp: false
          - vlanId: 20
            dhcp: false
          - vlanId: 40
            dhcp: false

  - controlPlane: true
    hostname: k8s-m2
    installDiskSelector:
      size: '<= 300GB'
    ipAddress: 10.0.30.32
    userVolumes:
      - name: extra
        provisioning:
          diskSelector:
            match: disk.transport == 'nvme' && !system_disk
          grow: true
          minSize: 500GiB
        filesystem:
          type: xfs
    networkInterfaces:
      - interface: bond0
        addresses:
          - 10.0.30.32/24
        bond: *bondconfig
        dhcp: false
        routes: *routes
        vip:
          ip: *talosVIP
        vlans: *vlanconfig

  - controlPlane: true
    hostname: k8s-m3
    installDiskSelector:
      size: '<= 300GB'
    ipAddress: 10.0.30.33
    userVolumes:
      - name: extra
        provisioning:
          diskSelector:
            match: disk.transport == 'nvme' && !system_disk
          grow: true
          minSize: 500GiB
        filesystem:
          type: xfs
    networkInterfaces:
      - interface: bond0
        addresses:
          - 10.0.30.33/24
        bond: *bondconfig
        dhcp: false
        routes: *routes
        vip:
          ip: *talosVIP
        vlans: *vlanconfig

controlPlane:
  schematic:
    customization:
      extraKernelArgs:
        - apparmor=0
        - init_on_alloc=0
        - init_on_free=0
        - mitigations=off
        - security=none
        - talos.auditd.disabled=1
      systemExtensions:
        officialExtensions:
          - siderolabs/i915
          - siderolabs/intel-ucode
          - siderolabs/iscsi-tools
          - siderolabs/util-linux-tools

  patches:
    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        proxy:
          disabled: true
        coreDNS:
          disabled: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                plugins:
                  score:
                    disabled:
                      - name: ImageLocality
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - "10.0.30.0/24"

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Configure NFS mount options
    - |
      machine:
        files:
          - op: overwrite
            path: /etc/nfsmount.conf
            permissions: 0o644
            content: |
              [ NFSMount_Global_Options ]
              nfsvers=4.2
              hard=True
              noatime=True
              nconnect=16

    # Disable search domain everywhere
    - |-
      machine:
        network:
          disableSearchDomain: true

    # Enable host dns
    - |-
      machine:
        features:
          hostDNS:
            enabled: true
            resolveMemberNames: true
            forwardKubeDNSToHost: false

    # Enable cluster discovery
    - |-
      cluster:
        discovery:
          registries:
            service:
              disabled: false

    # Configure kubelet
    - |-
      machine:
        kubelet:
          extraConfig:
            maxPods: 150
          nodeIP:
            validSubnets: ["10.0.30.0/24"]
          extraMounts:
            - destination: /var/mnt/extra
              type: bind
              source: /var/mnt/extra
              options: ["bind", "rshared", "rw"]

    # Force nameserver
    - |-
      machine:
        network:
          nameservers: ["10.0.30.1"]

    # Configure NTP
    - |-
      machine:
        time:
          disabled: false
          servers: ["10.0.30.1"]

    # Custom sysctl settings
    - |-
      machine:
        sysctls:
          fs.inotify.max_user_watches: 1048576   # Watchdog
          fs.inotify.max_user_instances: 8192    # Watchdog
          net.core.rmem_max: 67108864            # 10Gb/s
          net.core.wmem_max: 67108864            # 10Gb/s
          net.ipv4.tcp_mtu_probing: 1            # 10Gb/s | Jumbo frames?
          net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
          net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
          net.core.default_qdisc: fq             # 10Gb/s
          net.ipv4.tcp_congestion_control: bbr   # 10Gb/s
          net.ipv4.tcp_fastopen: 3               # TCP Fast Open
          net.ipv4.tcp_window_scaling: 1         # 10Gb/s
          vm.nr_hugepages: 1024                  # Postgres

    # Enable local registry caches
    - |-
      machine:
        registries:
          mirrors:
            docker.io:
              endpoints: ["http://nas.serek.xyz:5000"]
            registry.k8s.io:
              endpoints: ["http://nas.serek.xyz:5001"]
            gcr.io:
              endpoints: ["http://nas.serek.xyz:5002"]
            ghcr.io:
              endpoints: ["http://nas.serek.xyz:5003"]

    # Enable kubernetes Talos API access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles: ["os:admin"]
            allowedKubernetesNamespaces: ["actions-runner-system", "system-upgrade"]

